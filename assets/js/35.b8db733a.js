(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{384:function(t,a,s){t.exports=s.p+"assets/img/diff-1.4ba5033d.png"},471:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" diff算法")]),t._v(" "),a("p",[t._v("在之前只实现了单节点的 diff 算法，这里需要实现多节点的 diff 算法")]),t._v(" "),a("h2",{attrs:{id:"对于-reconcilesingleelement-的改动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于-reconcilesingleelement-的改动"}},[t._v("#")]),t._v(" 对于 reconcileSingleElement 的改动")]),t._v(" "),a("p",[t._v("当前支持的情况：")]),t._v(" "),a("p",[t._v("A1 -> B1\nA1 -> A2")]),t._v(" "),a("p",[t._v("需要支持的情况：")]),t._v(" "),a("p",[t._v("ABC -> A")]),t._v(" "),a("p",[a("code",[t._v("单/多节点")]),t._v("是指``更新后是单/多节点`")]),t._v(" "),a("p",[t._v("更细致的，我们需要区分 4 种情况：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("key 相同，type 相同 == 复用当前节点 例如：A1 B2 C3 -> A1")])]),t._v(" "),a("li",[a("p",[t._v("key 相同，type 不同 == 不存在任何复用的可能性 例如：A1 B2 C3 -> B1")])]),t._v(" "),a("li",[a("p",[t._v("key 不同，type 相同  == 当前节点不能复用")])]),t._v(" "),a("li",[a("p",[t._v("key 不同，type 不同 == 当前节点不能复用")])])]),t._v(" "),a("h2",{attrs:{id:"对于-reconcilesingletextnode-的改动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于-reconcilesingletextnode-的改动"}},[t._v("#")]),t._v(" 对于 reconcileSingleTextNode 的改动")]),t._v(" "),a("p",[t._v("类似 reconcileSingleElement")]),t._v(" "),a("h2",{attrs:{id:"对于同级多节点-diff-的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于同级多节点-diff-的支持"}},[t._v("#")]),t._v(" 对于同级多节点 Diff 的支持")]),t._v(" "),a("p",[t._v("单节点需要支持的情况：")]),t._v(" "),a("ul",[a("li",[t._v("插入 Placement")]),t._v(" "),a("li",[t._v("删除 ChildDeletion")])]),t._v(" "),a("p",[t._v("多节点需要支持的情况：")]),t._v(" "),a("ul",[a("li",[t._v("插入 Placement")]),t._v(" "),a("li",[t._v("删除 ChildDeletion")]),t._v(" "),a("li",[t._v("移动 Placement")])]),t._v(" "),a("p",[t._v("整体流程分为4步")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("将 current 中所有同级 fiber 保存在 Map 中")])]),t._v(" "),a("li",[a("p",[t._v("遍历 newChild 数组，对于每个遍历到的 element，存在两种情况：")])])]),t._v(" "),a("ul",[a("li",[t._v("在 Map 中存在对应 current fiber，且可以复用")]),t._v(" "),a("li",[t._v("在 Map 中不存在对应 current fiber，或不能复用")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("判断是插入还是移动")])]),t._v(" "),a("li",[a("p",[t._v("最后Map中剩下的都标记删除")])])]),t._v(" "),a("h3",{attrs:{id:"步骤-2-是否复用详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-是否复用详解"}},[t._v("#")]),t._v(" 步骤 2 —— 是否复用详解")]),t._v(" "),a("p",[t._v("首先，根据 key 从 Map 中获取 current fiber，如果不存在 current fiber，则没有复用的可能。")]),t._v(" "),a("p",[t._v("接下来，分情况讨论：")]),t._v(" "),a("ul",[a("li",[t._v("element 是 HostText，current fiber 是么？")]),t._v(" "),a("li",[t._v("element 是其他 ReactElement，current fiber 是么？")]),t._v(" "),a("li",[t._v("TODO element 是数组或 Fragment，current fiber 是么？")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"步骤-3-插入-移动判断详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-插入-移动判断详解"}},[t._v("#")]),t._v(" 步骤 3 —— 插入/移动判断详解")]),t._v(" "),a("p",[a("code",[t._v("移动")]),t._v("具体是指"),a("code",[t._v("向右移动")])]),t._v(" "),a("p",[t._v("移动的判断依据：element 的 index 与"),a("code",[t._v("element 对应 current fiber")]),t._v("的index 的比较")]),t._v(" "),a("p",[t._v("A1 B2 C3 -> B2 C3 A1")]),t._v(" "),a("p",[t._v("0__1__2_____0__1__2")]),t._v(" "),a("p",[t._v("当遍历 element 时，"),a("code",[t._v("当前遍历到的 element")]),t._v("一定是"),a("code",[t._v("所有已遍历的 element")]),t._v("中最靠右那个。")]),t._v(" "),a("p",[t._v("所以只需要记录"),a("code",[t._v("最后一个可复用 fiber")]),t._v("在 current 中的 index（lastPlacedIndex），在接下来的遍历中：")]),t._v(" "),a("ul",[a("li",[t._v("如果接下来遍历到的"),a("code",[t._v("可复用fiber")]),t._v("的 index < lastPlacedIndex，则标记 Placement")]),t._v(" "),a("li",[t._v("否则，不标记")])]),t._v(" "),a("h2",{attrs:{id:"移动操作的执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动操作的执行"}},[t._v("#")]),t._v(" 移动操作的执行")]),t._v(" "),a("p",[t._v("Placement同时对应：")]),t._v(" "),a("ul",[a("li",[t._v("移动")]),t._v(" "),a("li",[t._v("插入")])]),t._v(" "),a("p",[t._v("对于插入操作，之前对应的 DOM 方法是 parentNode.appendChild，现在为了实现移动操作，需要支持 parentNode.insertBefore")]),t._v(" "),a("p",[t._v("parentNode.insertBefore 需要找到"),a("code",[t._v("目标兄弟Host节点")]),t._v("，要考虑 2 个因素")]),t._v(" "),a("ul",[a("li",[t._v("可能并不是目标fiber的直接兄弟节点")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("不稳定(自身携带副作用)的 Host 节点不能作为"),a("code",[t._v("目标兄弟Host节点")])])]),t._v(" "),a("h2",{attrs:{id:"不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不足"}},[t._v("#")]),t._v(" 不足")]),t._v(" "),a("ul",[a("li",[t._v("不支持数组与 Fragment")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("可能有未考虑到的边界情况")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(384)}}),t._v(" "),a("SideTitle",{attrs:{page:t.$page}})],1)}),[],!1,null,null,null);a.default=e.exports}}]);