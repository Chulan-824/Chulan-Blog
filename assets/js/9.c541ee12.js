(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{410:function(t,a,s){t.exports=s.p+"assets/img/update-1.8e6e7c06.png"},411:function(t,a,s){t.exports=s.p+"assets/img/update-2.c2fb1086.png"},412:function(t,a,s){t.exports=s.p+"assets/img/update-3.cd09aa18.png"},413:function(t,a,s){t.exports=s.p+"assets/img/update-4.a6078573.png"},414:function(t,a,s){t.exports=s.p+"assets/img/update-5.93682e05.png"},415:function(t,a,s){t.exports=s.p+"assets/img/commit-1.12a43543.png"},483:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"状态更新机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态更新机制"}},[t._v("#")]),t._v(" 状态更新机制")]),t._v(" "),a("p",[t._v("在 React 中，常见的触发更新的方式有：")]),t._v(" "),a("ul",[a("li",[t._v("ReactDOM.createRoot().render（或老版的 ReactDOM.render ）")]),t._v(" "),a("li",[t._v("this.setState")]),t._v(" "),a("li",[t._v("useState的dispatch 方法")])]),t._v(" "),a("p",[t._v("我们希望实现一套统一的更新机制（将上述更新方式接入同一套机制中），他的特点是：")]),t._v(" "),a("ul",[a("li",[t._v("兼容上述触发更新的方式")]),t._v(" "),a("li",[t._v("方便后续扩展（优先级机制...）")])]),t._v(" "),a("h2",{attrs:{id:"实现状态更新机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现状态更新机制"}},[t._v("#")]),t._v(" 实现状态更新机制")]),t._v(" "),a("h3",{attrs:{id:"更新机制的组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新机制的组成部分"}},[t._v("#")]),t._v(" 更新机制的组成部分")]),t._v(" "),a("ul",[a("li",[t._v("代表更新的数据结构 —— Update")]),t._v(" "),a("li",[t._v("消费 update 的数据结构 —— UpdateQueue")])]),t._v(" "),a("p",[t._v("他们的关系如下图：")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(410)}}),t._v(" "),a("h2",{attrs:{id:"接入状态更新机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接入状态更新机制"}},[t._v("#")]),t._v(" 接入状态更新机制")]),t._v(" "),a("p",[t._v("更新分为 mount 和 update 两种，需要实现 ReactDOM.createRoot().render 第一次 mount 时调用的 API，并将 API 接入上述更新机制中")]),t._v(" "),a("p",[t._v("需要考虑的事情：")]),t._v(" "),a("ul",[a("li",[t._v("更新可能发生于任意组件，而更新流程是从根节点递归的")]),t._v(" "),a("li",[t._v("需要一个统一的根节点保存通用信息")])]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(411)}}),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(412)}}),t._v(" "),a("h2",{attrs:{id:"初探mount流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初探mount流程"}},[t._v("#")]),t._v(" 初探mount流程")]),t._v(" "),a("p",[t._v("更新流程的目的：")]),t._v(" "),a("ul",[a("li",[t._v("生成 wip fiberNode 树")]),t._v(" "),a("li",[t._v("标记副作用 flags")])]),t._v(" "),a("p",[t._v("更新流程的步骤：")]),t._v(" "),a("ul",[a("li",[t._v("递：beginWork")]),t._v(" "),a("li",[t._v("归：completeWork")])]),t._v(" "),a("h3",{attrs:{id:"beginwork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beginwork"}},[t._v("#")]),t._v(" beginWork")]),t._v(" "),a("p",[t._v("对于如下结构的reactElement：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("当进入A的 beginWork 时，通过对比 B current fiberNode 与 B reactElement，生成 B 对应wip fiberNode。")]),t._v(" "),a("p",[t._v("在此过程中最多会标记2类与"),a("strong",[t._v("结构变化")]),t._v("相关的flags：")]),t._v(" "),a("ul",[a("li",[t._v("Placement")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[t._v("插入： a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ab  \n移动： abc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" bca\n")])])]),a("ul",[a("li",[t._v("ChildDeletion")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[t._v("删除： ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("beginWork 不包含与「属性变化」相关的flag：Update")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("鸡"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("你太美"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("h4",{attrs:{id:"实现与-host-相关节点的-beginwork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现与-host-相关节点的-beginwork"}},[t._v("#")]),t._v(" 实现与 Host 相关节点的 beginWork")]),t._v(" "),a("p",[t._v("首先，为开发环境增加__DEV__标识，方便Dev包打印更多信息：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" @rollup/plugin-replace\n")])])]),a("ul",[a("li",[t._v("HostRoot => 计算状态最新值 创建子 fiberNode")]),t._v(" "),a("li",[t._v("HostComponent => 创建子 fiberNode")]),t._v(" "),a("li",[t._v("HostTest => 因为无子节点 无需处理")])]),t._v(" "),a("h4",{attrs:{id:"beginwork-性能优化策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beginwork-性能优化策略"}},[t._v("#")]),t._v(" beginWork 性能优化策略")]),t._v(" "),a("p",[t._v("考虑如下结构的 reactElement：")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("练习时长")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("两年半")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("理论上 mount 流程完毕后包含的 flags：")]),t._v(" "),a("ul",[a("li",[t._v("两年半 Placement")]),t._v(" "),a("li",[t._v("span Placement")]),t._v(" "),a("li",[t._v("练习时长 Placement")]),t._v(" "),a("li",[t._v("p Placement")]),t._v(" "),a("li",[t._v("div Placement")])]),t._v(" "),a("p",[t._v("相比于执行5次Placment，我们可以构建好「离屏DOM树」后，对div执行1次Placement操作")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(413)}}),t._v(" "),a("h3",{attrs:{id:"completework"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#completework"}},[t._v("#")]),t._v(" completeWork")]),t._v(" "),a("p",[t._v("需要解决的问题：")]),t._v(" "),a("ul",[a("li",[t._v("对于 Host 类型 fiberNode：构建离屏 DOM 树")]),t._v(" "),a("li",[t._v("标记 Update flag（TODO）")])]),t._v(" "),a("h4",{attrs:{id:"completework性能优化策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#completework性能优化策略"}},[t._v("#")]),t._v(" completeWork性能优化策略")]),t._v(" "),a("p",[t._v("flags 分布在不同 fiberNode 中，如何快速找到他们？")]),t._v(" "),a("p",[t._v("答案：利用 completeWork 向上遍历（归）的流程，将子 fiberNode 的 flags 冒泡到父 fiberNode")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(414)}}),t._v(" "),a("h3",{attrs:{id:"commit阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit阶段"}},[t._v("#")]),t._v(" commit阶段")]),t._v(" "),a("p",[t._v("回顾上面可知道 react 内部有 3 个阶段")]),t._v(" "),a("ul",[a("li",[t._v("schedule 阶段")]),t._v(" "),a("li",[t._v("render 阶段（beginWork completeWork）")]),t._v(" "),a("li",[t._v("commit 阶段（commitWork）")])]),t._v(" "),a("p",[t._v("而 commit 阶段的还有 3 个子阶段")]),t._v(" "),a("ul",[a("li",[t._v("beforeMutation 阶段")]),t._v(" "),a("li",[t._v("mutation 阶段")]),t._v(" "),a("li",[t._v("layout 阶段")])]),t._v(" "),a("p",[t._v("当前 commit 阶段要执行的任务：")]),t._v(" "),a("ul",[a("li",[t._v("fiber 树的切换")]),t._v(" "),a("li",[t._v("执行 Placement 对应操作（暂时实现）")])]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s(415)}}),t._v(" "),a("SideTitle",{attrs:{page:t.$page}})],1)}),[],!1,null,null,null);a.default=r.exports}}]);