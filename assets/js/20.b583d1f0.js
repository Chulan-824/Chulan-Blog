(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{380:function(t,r,e){t.exports=e.p+"assets/img/concurrentUpdate-1.d2f02e9d.png"},381:function(t,r,e){t.exports=e.p+"assets/img/concurrentUpdate-2.ede53b1c.png"},468:function(t,r,e){"use strict";e.r(r);var _=e(14),v=Object(_.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"并发更新原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并发更新原理"}},[t._v("#")]),t._v(" 并发更新原理")]),t._v(" "),r("p",[t._v("我们当前的实现是如何驱动的？")]),t._v(" "),r("ol",[r("li",[t._v("交互触发更新（createUpdate）")]),t._v(" "),r("li",[t._v("调度阶段微任务调度（ensureRootIsScheduled 方法）")]),t._v(" "),r("li",[t._v("微任务调度结束，进入 render 阶段")]),t._v(" "),r("li",[t._v("render 阶段结束，进入 commit 阶段")]),t._v(" "),r("li",[t._v("commit 阶段结束，调度阶段微任务调度（ensureRootIsScheduled 方法）")])]),t._v(" "),r("p",[t._v("整体是个大的微任务循环，循环的驱动力是"),r("code",[t._v("微任务调度模块")])]),t._v(" "),r("h2",{attrs:{id:"同步示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#同步示例"}},[t._v("#")]),t._v(" 同步示例")]),t._v(" "),r("img",{staticClass:"zoom-custom-imgs",attrs:{src:e(380)}}),t._v(" "),r("p",[t._v("示例在两种情况下会造成阻塞：")]),t._v(" "),r("ul",[r("li",[t._v("work.count 数量太多")]),t._v(" "),r("li",[t._v("单个 work.count 工作量太大")])]),t._v(" "),r("h2",{attrs:{id:"并发更新的理论基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并发更新的理论基础"}},[t._v("#")]),t._v(" 并发更新的理论基础")]),t._v(" "),r("p",[t._v("并发更新的基础是"),r("code",[t._v("时间切片")]),t._v(",将可能会出现掉帧的长宏任务，切成不会影响页面渲染短的宏任务")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://codesandbox.io/s/concurrent-3h48s?file=/src/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线示例"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"改造示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#改造示例"}},[t._v("#")]),t._v(" 改造示例")]),t._v(" "),r("p",[t._v("如果我们想在宏任务中完成任务调度，本质上是个大的宏任务循环，循环的驱动力是 Scheduler")]),t._v(" "),r("p",[t._v("理论基础参考《React设计原理》")]),t._v(" "),r("p",[t._v("在微任务调度中，没有"),r("code",[t._v("优先级")]),t._v("的概念，对于 Scheduler存在5种优先级：")]),t._v(" "),r("ul",[r("li",[t._v("ImmediatePriority（同步优先级）")]),t._v(" "),r("li",[t._v("UserBlockingPriority（点击事件等）")]),t._v(" "),r("li",[t._v("NormalPriority（正常优先级  ）")]),t._v(" "),r("li",[t._v("LowPriority（低优先级）")]),t._v(" "),r("li",[t._v("IdlePriority（空闲时优先级）")])]),t._v(" "),r("img",{staticClass:"zoom-custom-imgs",attrs:{src:e(381)}}),t._v(" "),r("p",[t._v("需要考虑的情况：")]),t._v(" "),r("ol",[r("li",[t._v("工作过程仅有一个 work")])]),t._v(" "),r("ul",[r("li",[t._v("如果仅有一个 work，Scheduler 有个优化路径：如果调度的回调函数的返回值是函数，则会继续调度返回的函数")])]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("工作过程中产生相同优先级的 work")])]),t._v(" "),r("ul",[r("li",[t._v("如果优先级相同，则不需要开启新的调度")])]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("工作过程中产生更高/低优先级的 work")])]),t._v(" "),r("ul",[r("li",[t._v("把握一个原则：我们每次选出的都是优先级最高的 work")])]),t._v(" "),r("SideTitle",{attrs:{page:t.$page}})],1)}),[],!1,null,null,null);r.default=v.exports}}]);