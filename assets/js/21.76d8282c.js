(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{386:function(t,s,e){t.exports=e.p+"assets/img/event-1.6d08dcc8.png"},387:function(t,s,e){t.exports=e.p+"assets/img/event-2.3a6edc85.png"},473:function(t,s,e){"use strict";e.r(s);var a=e(14),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"实现事件系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现事件系统"}},[t._v("#")]),t._v(" 实现事件系统")]),t._v(" "),s("p",[t._v("事件系统本质上植根于浏览器事件模型，所以他隶属于 ReactDOM，在实现时要做到对Reconciler 0侵入。")]),t._v(" "),s("p",[t._v("实现事件系统需要考虑：")]),t._v(" "),s("ul",[s("li",[t._v("模拟实现浏览器事件捕获、冒泡流程")]),t._v(" "),s("li",[t._v("实现合成事件对象")]),t._v(" "),s("li",[t._v("方便后续扩展(不同事件，不同优先级)")])]),t._v(" "),s("h2",{attrs:{id:"实现-reactdom-与-reconciler-对接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-reactdom-与-reconciler-对接"}},[t._v("#")]),t._v(" 实现 ReactDOM 与 Reconciler 对接")]),t._v(" "),s("p",[t._v("将事件回调保存在 DOM 中，通过以下两个时机对接：")]),t._v(" "),s("ul",[s("li",[t._v("创建DOM时")]),t._v(" "),s("li",[t._v("更新属性时")])]),t._v(" "),s("h2",{attrs:{id:"模拟实现浏览器事件流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模拟实现浏览器事件流程"}},[t._v("#")]),t._v(" 模拟实现浏览器事件流程")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:e(386)}}),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:e(387)}}),t._v(" "),s("SideTitle",{attrs:{page:t.$page}})],1)}),[],!1,null,null,null);s.default=r.exports}}]);